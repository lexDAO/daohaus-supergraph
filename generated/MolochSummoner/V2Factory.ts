// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class SummonMSTX extends EthereumEvent {
  get params(): SummonMSTX__Params {
    return new SummonMSTX__Params(this);
  }
}

export class SummonMSTX__Params {
  _event: SummonMSTX;

  constructor(event: SummonMSTX) {
    this._event = event;
  }

  get mstx(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get depositToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get stakeToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get summoner(): Array<Address> {
    return this._event.parameters[3].value.toAddressArray();
  }

  get summonerShares(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get summoningDeposit(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get proposalDeposit(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get processingReward(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get periodDuration(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get votingPeriodLength(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get gracePeriodLength(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get dilutionBound(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }

  get summoningTime(): BigInt {
    return this._event.parameters[12].value.toBigInt();
  }
}

export class V2Factory extends SmartContract {
  static bind(address: Address): V2Factory {
    return new V2Factory("V2Factory", address);
  }

  summonMSTX(
    _depositToken: Address,
    _stakeToken: Address,
    _summoner: Array<Address>,
    _summonerShares: Array<BigInt>,
    _summonerDeposit: BigInt,
    _proposalDeposit: BigInt,
    _processingReward: BigInt,
    _periodDuration: BigInt,
    _votingPeriodLength: BigInt,
    _gracePeriodLength: BigInt,
    _dilutionBound: BigInt
  ): Address {
    let result = super.call("summonMSTX", [
      EthereumValue.fromAddress(_depositToken),
      EthereumValue.fromAddress(_stakeToken),
      EthereumValue.fromAddressArray(_summoner),
      EthereumValue.fromUnsignedBigIntArray(_summonerShares),
      EthereumValue.fromUnsignedBigInt(_summonerDeposit),
      EthereumValue.fromUnsignedBigInt(_proposalDeposit),
      EthereumValue.fromUnsignedBigInt(_processingReward),
      EthereumValue.fromUnsignedBigInt(_periodDuration),
      EthereumValue.fromUnsignedBigInt(_votingPeriodLength),
      EthereumValue.fromUnsignedBigInt(_gracePeriodLength),
      EthereumValue.fromUnsignedBigInt(_dilutionBound)
    ]);

    return result[0].toAddress();
  }

  try_summonMSTX(
    _depositToken: Address,
    _stakeToken: Address,
    _summoner: Array<Address>,
    _summonerShares: Array<BigInt>,
    _summonerDeposit: BigInt,
    _proposalDeposit: BigInt,
    _processingReward: BigInt,
    _periodDuration: BigInt,
    _votingPeriodLength: BigInt,
    _gracePeriodLength: BigInt,
    _dilutionBound: BigInt
  ): CallResult<Address> {
    let result = super.tryCall("summonMSTX", [
      EthereumValue.fromAddress(_depositToken),
      EthereumValue.fromAddress(_stakeToken),
      EthereumValue.fromAddressArray(_summoner),
      EthereumValue.fromUnsignedBigIntArray(_summonerShares),
      EthereumValue.fromUnsignedBigInt(_summonerDeposit),
      EthereumValue.fromUnsignedBigInt(_proposalDeposit),
      EthereumValue.fromUnsignedBigInt(_processingReward),
      EthereumValue.fromUnsignedBigInt(_periodDuration),
      EthereumValue.fromUnsignedBigInt(_votingPeriodLength),
      EthereumValue.fromUnsignedBigInt(_gracePeriodLength),
      EthereumValue.fromUnsignedBigInt(_dilutionBound)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  template(): Address {
    let result = super.call("template", []);

    return result[0].toAddress();
  }

  try_template(): CallResult<Address> {
    let result = super.tryCall("template", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _template(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SummonMSTXCall extends EthereumCall {
  get inputs(): SummonMSTXCall__Inputs {
    return new SummonMSTXCall__Inputs(this);
  }

  get outputs(): SummonMSTXCall__Outputs {
    return new SummonMSTXCall__Outputs(this);
  }
}

export class SummonMSTXCall__Inputs {
  _call: SummonMSTXCall;

  constructor(call: SummonMSTXCall) {
    this._call = call;
  }

  get _depositToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _stakeToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _summoner(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get _summonerShares(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _summonerDeposit(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _proposalDeposit(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _processingReward(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _periodDuration(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _votingPeriodLength(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get _gracePeriodLength(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get _dilutionBound(): BigInt {
    return this._call.inputValues[10].value.toBigInt();
  }
}

export class SummonMSTXCall__Outputs {
  _call: SummonMSTXCall;

  constructor(call: SummonMSTXCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
